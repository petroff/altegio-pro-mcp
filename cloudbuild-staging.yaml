# Cloud Build configuration for STAGING deployments
# Triggered on push to any branch except main
# Project: altegio-mcp
# Region: europe-west1
# Service: altegio-mcp-{sanitized-branch-name}
# Auto-cleanup: 3 days after last deployment

substitutions:
  _REGION: europe-west1
  _ARTIFACT_REPO: cloud-run-source-deploy
  _SECRET_NAME: altegio-api-token

steps:
  # Step 1: Sanitize branch name for service naming
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: bash
    args:
      - '-c'
      - |
        # Sanitize branch name: remove special chars, lowercase, truncate
        BRANCH_NAME="$${BRANCH_NAME:-unknown}"
        SANITIZED=$$(echo "$$BRANCH_NAME" | \
          sed 's/[^a-zA-Z0-9-]/-/g' | \
          tr '[:upper:]' '[:lower:]' | \
          cut -c1-40)
        echo "$$SANITIZED" > /workspace/branch-sanitized.txt
        echo "Sanitized branch name: $$SANITIZED"
        echo "Service name: altegio-mcp-$$SANITIZED"
    id: 'sanitize-branch'

  # Step 2: Build Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-t'
      - '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REPO}/altegio-mcp/altegio-mcp:$SHORT_SHA'
      - '-t'
      - '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REPO}/altegio-mcp/altegio-mcp:staging-$SHORT_SHA'
      - '.'
    id: 'build-image'
    waitFor: ['sanitize-branch']

  # Step 3: Push image to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - '--all-tags'
      - '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REPO}/altegio-mcp/altegio-mcp'
    id: 'push-image'
    waitFor: ['build-image']

  # Step 4: Deploy to Cloud Run Staging
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: bash
    args:
      - '-c'
      - |
        SANITIZED=$$(cat /workspace/branch-sanitized.txt)
        SERVICE_NAME="altegio-mcp-$$SANITIZED"

        echo "Deploying to service: $$SERVICE_NAME"

        gcloud run deploy "$$SERVICE_NAME" \
          --image=${_REGION}-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REPO}/altegio-mcp/altegio-mcp:$SHORT_SHA \
          --region=${_REGION} \
          --platform=managed \
          --allow-unauthenticated \
          --set-env-vars=NODE_ENV=staging,LOG_LEVEL=debug,BRANCH_NAME=$$BRANCH_NAME \
          --update-secrets=ALTEGIO_API_TOKEN=${_SECRET_NAME}:latest \
          --memory=512Mi \
          --cpu=1 \
          --max-instances=5 \
          --min-instances=0 \
          --timeout=3600 \
          --no-cpu-throttling \
          --session-affinity

        # Get service URL
        SERVICE_URL=$$(gcloud run services describe "$$SERVICE_NAME" \
          --region=${_REGION} \
          --format='value(status.url)')

        echo "================================================"
        echo "âœ… Staging deployment successful!"
        echo "Service: $$SERVICE_NAME"
        echo "Branch: $$BRANCH_NAME"
        echo "URL: $$SERVICE_URL"
        echo "Image: ${_REGION}-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REPO}/altegio-mcp/altegio-mcp:$SHORT_SHA"
        echo "Auto-cleanup: 3 days"
        echo "================================================"
    id: 'deploy-staging'
    waitFor: ['push-image']

# Build configuration
options:
  machineType: 'E2_HIGHCPU_8'
  logging: CLOUD_LOGGING_ONLY

# Store images
images:
  - '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REPO}/altegio-mcp/altegio-mcp:$SHORT_SHA'
  - '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REPO}/altegio-mcp/altegio-mcp:staging-$SHORT_SHA'

# Timeout
timeout: '1200s'
